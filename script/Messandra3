const axios = require('axios');

// Convert normal letters to bold Unicode letters
function convertToBold(text) {
  const boldMap = {
    'a': '𝗮','b': '𝗯','c': '𝗰','d': '𝗱','e': '𝗲','f': '𝗳','g': '𝗴','h': '𝗵','i': '𝗶','j': '𝗷',
    'k': '𝗸','l': '𝗹','m': '𝗺','n': '𝗻','o': '𝗼','p': '𝗽','q': '𝗾','r': '𝗿','s': '𝘀','t': '𝘁',
    'u': '𝘂','v': '𝘃','w': '𝘄','x': '𝘅','y': '𝘆','z': '𝘇',
    'A': '𝗔','B': '𝗕','C': '𝗖','D': '𝗗','E': '𝗘','F': '𝗙','G': '𝗚','H': '𝗛','I': '𝗜','J': '𝗝',
    'K': '𝗞','L': '𝗟','M': '𝗠','N': '𝗡','O': '𝗢','P': '𝗣','Q': '𝗤','R': '𝗥','S': '𝗦','T': '𝗧',
    'U': '𝗨','V': '𝗩','W': '𝗪','X': '𝗫','Y': '𝗬','Z': '𝗭',
  };
  return text.split('').map(char => boldMap[char] || char).join('');
}

// Split message into chunks within character limit
function splitMessage(text, maxLength) {
  const lines = text.split('\n');
  const chunks = [];
  let chunk = '';

  for (const line of lines) {
    if ((chunk + '\n' + line).length > maxLength) {
      chunks.push(chunk);
      chunk = line;
    } else {
      chunk += (chunk ? '\n' : '') + line;
    }
  }

  if (chunk) chunks.push(chunk);
  return chunks;
}

const responseOpeners = ["𝗔𝗿𝗶𝗮 𝗔𝗜"];

module.exports.config = {
  name: 'aria',
  version: '1.0.0',
  hasPermission: 0,
  credits: 'YourName',
  description: 'Ka-chat si Aria AI',
  commandCategory: 'AI',
  usages: '[tanong]',
  cooldowns: 0,
};

module.exports.run = async function ({ api, event, args }) {
  const input = args.join(' ');
  if (!input) return api.sendMessage("❗ I-type ang gusto mong itanong kay Aria.", event.threadID, event.messageID);

  try {
    const apiUrl = 'https://betadash-api-swordslush-production.up.railway.app/Aria';
    
    const response = await axios.get(apiUrl, {
      params: {
        ask: input,
        userid: event.senderID,
        stream: ''
      },
      timeout: 10000
    });

    const replyText = response.data.reply || JSON.stringify(response.data);
    const opener = responseOpeners[Math.floor(Math.random() * responseOpeners.length)];
    const fullMessage = `${opener}:\n${replyText}`;
    const messageChunks = splitMessage(fullMessage, 2000); // Adjust based on platform limits

    for (const msg of messageChunks) {
      api.sendMessage(msg, event.threadID);
    }

  } catch (err) {
    console.error("❌ Aria API error:", err.message);
    api.sendMessage("❌ Nagkaroon ng error sa pagkuha ng sagot mula kay Aria.", event.threadID, event.messageID);
  }
};
